{"version":3,"file":"static/js/948.838b05fe.chunk.js","mappings":"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","sources":["components/Contact/Contact.styled.jsx","components/Contact/Contact.jsx","components/ContactList/ContactList.styled.jsx","redux/contacts/selectors.js","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","../node_modules/nanoid/index.browser.js","components/ContactAddForm/ContactAddForm.styled.jsx","../node_modules/@mui/icons-material/esm/PeopleAlt.js","../node_modules/@mui/icons-material/esm/PersonAddAlt1.js","components/ContactAddForm/ContactAddForm.jsx","../node_modules/@mui/system/esm/Container/Container.js","pages/Contacts.js","pages/Title.styled.jsx","../node_modules/@mui/icons-material/AccountBox.js","../node_modules/@mui/icons-material/DeleteForeverOutlined.js","../node_modules/@mui/icons-material/PhoneIphone.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Item = styled.li`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  padding: 8px 0px;\n  transition: border-bottom 250ms linear;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.54);\n  :hover {\n    border-bottom: 1px solid #1363df;\n    :hover > svg {\n      transition: color 250ms linear;\n      color: #1363df;\n    }\n  }\n`;\n\nexport const DeleteContact = styled.button`\n  display: flex;\n  justify-content: center;\n  margin-left: auto;\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  :hover > svg {\n    transition: color 250ms linear;\n    color: tomato;\n  }\n`;","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\n\nimport AccountBoxIcon from '@mui/icons-material/AccountBox';\nimport DeleteForeverOutlinedIcon from '@mui/icons-material/DeleteForeverOutlined';\nimport { Item, DeleteContact } from './Contact.styled';\n\nexport const Contact = ({ id, number, name }) => {\n  const dispatch = useDispatch();\n\n  const onDelete = () => {\n    dispatch(deleteContact(id));\n  };\n\n  return (    \n      <Item >\n        <AccountBoxIcon fontSize=\"large\" sx={{ mr: 1 }} />\n        <p>\n          {name}: <span>{number}</span>\n        </p>\n        <DeleteContact type=\"button\" onClick={onDelete}>Delete\n          <DeleteForeverOutlinedIcon sx={{ fontSize: 30 }} />\n        </DeleteContact>\n      </Item>    \n  );\n};\n\nContact.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};","import styled from \"styled-components\";\n\nexport const List = styled.ul`\n  padding: 0;\n  margin: 0;\n  list-style: none;\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-gap: 12px;\n`","export const selectLoading = state => state.contacts.isLoading;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectСontacts = state => state.contacts.items;\n","import PropTypes from 'prop-types'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Contact } from 'components/Contact/Contact';\nimport { List } from './ContactList.styled';\nimport { selectFilter, selectСontacts } from 'redux/contacts/selectors';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/operations';\n\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectСontacts);\n  // console.log(selectСontacts);\n  // console.log(contacts);\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const normalizedFilter = filter.toLowerCase();\n  const filteredContacts = contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\n\n  useEffect(() => {\n        dispatch(fetchContacts());\n    }, [dispatch]);\n\n  return (\n    <List >\n      {filteredContacts.map(({ id, name, number }) => (\n          <Contact key={id} id={id} name={name} number={number} />\n      ))}\n    </List>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }).isRequired\n  ),\n}","import { TextField, Typography } from '@mui/material';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filterContacts } from 'redux/contacts/filterSlice';\nimport { selectFilter } from 'redux/contacts/selectors';\n// import {\n//   FilterTitle, \n//   Filterinput, \n// } from './Filter.styled';\n\n\nexport const Filter = () => {\n  const valueFilter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n    const onFilter = event => {\n        dispatch(filterContacts(event.currentTarget.value));\n    };  \n     \n    return (    \n        <label>\n          <Typography variant=\"h6\" gutterBottom sx={{ width: \"292px\", mb: 0, mt: 1 }}>\n              Filter\n          </Typography >\n            <TextField\n                variant=\"standard\"\n                id=\"standard-search\"\n                label=\"Enter request\"\n                type=\"search\"\n                name=\"filter\" \n                value={valueFilter}\n                onChange={onFilter}                                \n                // placeholder=\"Enter request\"\n            ></TextField>            \n        </label>     \n    )    \n }\n\nexport default Filter;\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import styled from 'styled-components';\n\nexport const Title = styled.h2`\n  font-family: 'Handlee', cursive;\n  text-align: center;\n`\n\nexport const FormTitle = styled.h1`\n    font-size: 35px;\n    text-shadow: 2px 2px 2px rgba(0, 0, 0, 0.2);\n`\nexport const PhonebookForm = styled.form`\n    margin: 0 auto;\n    list-style: inside;\n    display: flex;\n    flex-direction: column;\n    max-width: 640px;\n    min-width: 340px;\n    /* width: 355px; */\n    padding: 20px;\n    border: 1px solid black;\n    border: 0.3px solid darkcyan;\n    border-radius: 5px;\n    /* background-color: rgb(100, 237, 207); */\n    color: darkblue;\n    box-shadow: 3px 6px 6px rgba(0, 0, 0, 0.15);\n`\nexport const FormLabel = styled.label`\n    font-size: 18px;\n    font-weight: 500;\n    margin-bottom: 10px;\n`\nexport const FormInput = styled.input`\n    width: 250px;\n    margin-bottom: 10px;\n    padding: 4px;\n    border: 0.3px solid rgb(20, 66, 78);\n    border-radius: 3px;\n    background-color: rgba(228, 253, 252, 0.952);\n    font-size: 18px;\n    transition: box-shadow 150ms cubic-bezier(0.4, 0, 0.2, 1);\n        &:focus, :hover {\n        box-shadow: 1px 3px 3px rgba(0, 0, 0, 0.4);\n}\n`\nexport const FormBtn = styled.button`\n    width: 125px;\n    padding: 10px 15px;\n    margin-top: 20px;\n    background-color: rgb(20, 89, 116);\n    /* background-color: rgb(28, 80, 165); */\n    color: white;\n    border: none;\n    border-radius: 15px;\n\n    transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    background-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1);\n        &:hover {\n        background-color: #fafafa;\n        color: darkblue;\n        box-shadow: 1px 3px 3px rgba(0, 0, 0, 0.4);\n        }\n`","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon([/*#__PURE__*/_jsx(\"path\", {\n  fillRule: \"evenodd\",\n  d: \"M16.67 13.13C18.04 14.06 19 15.32 19 17v3h4v-3c0-2.18-3.57-3.47-6.33-3.87z\"\n}, \"0\"), /*#__PURE__*/_jsx(\"circle\", {\n  cx: \"9\",\n  cy: \"8\",\n  r: \"4\",\n  fillRule: \"evenodd\"\n}, \"1\"), /*#__PURE__*/_jsx(\"path\", {\n  fillRule: \"evenodd\",\n  d: \"M15 12c2.21 0 4-1.79 4-4s-1.79-4-4-4c-.47 0-.91.1-1.33.24C14.5 5.27 15 6.58 15 8s-.5 2.73-1.33 3.76c.42.14.86.24 1.33.24zm-6 1c-2.67 0-8 1.34-8 4v3h16v-3c0-2.66-5.33-4-8-4z\"\n}, \"2\")], 'PeopleAlt');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M13 8c0-2.21-1.79-4-4-4S5 5.79 5 8s1.79 4 4 4 4-1.79 4-4zm2 2v2h3v3h2v-3h3v-2h-3V7h-2v3h-3zM1 18v2h16v-2c0-2.66-5.33-4-8-4s-8 1.34-8 4z\"\n}), 'PersonAddAlt1');","import React, { useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport { useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { Title } from './ContactAddForm.styled'\nimport { Box, Button, TextField } from '@mui/material';\nimport { PeopleAlt, PersonAddAlt1 } from '@mui/icons-material';\nimport PhoneIphoneIcon from '@mui/icons-material/PhoneIphone';\n\n\n\nexport const ContactForm = () => {   \n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n    const dispatch = useDispatch();\n\n    const handleInputChange = event => {\n        switch (event.currentTarget.name) {\n          case \"name\": setName(event.currentTarget.value)\n          break\n      \n          case \"number\": setNumber(event.currentTarget.value)\n          break\n      \n          default:\n          return\n        };\n        console.log(name, number);\n    }\n\n    const handleFormSubmit = event => {\n        event.preventDefault();\n        const newContact = {\n            name,\n            number,\n            id: nanoid(),\n        };\n\n        // toaster\n        // toaster\n        // toaster\n\n        dispatch(addContact(newContact));\n\n        setName('');\n        setNumber('');\n    }\n\n    // const nameInputId = nanoid();\n    // const numberInputId = nanoid();\n\n\n  return (\n    <Box\n      display=\"flex\"\n      flexDirection={'column'}\n      gap=\"10px\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n        component=\"form\"\n        autoComplete=\"off\"\n        maxWidth=\"420px\"\n        // sx={{ margin: '0 auto' }}\n        onSubmit={handleFormSubmit}\n      >\n        <Box sx={{ display: 'flex', alignItems: 'flex-end', gap: \"10px\" }}>\n          <Title >Add new contact</Title>\n          <PeopleAlt />\n        </Box>\n        <Box sx={{ display: 'flex', alignItems: 'flex-end' }}>\n          <PersonAddAlt1 sx={{ color: '#0f7ec9', mr: 1, my: 0.5 }} />\n          <TextField\n            sx={{ width: '260px' }}\n            variant=\"standard\"\n            onChange={handleInputChange}\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            required\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            size=\"small\"\n            margin=\"none\"          \n            // fullWidth\n            id=\"name\"\n            label=\"Name\"\n            inputProps={{\n              pattern:\n                \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\n            }}            \n          />\n        </Box>\n\n        <Box sx={{ display: 'flex', alignItems: 'flex-end' }}>\n          <PhoneIphoneIcon sx={{ color: '#0f7ec9', mr: 1, my: 0.5 }} />\n          <TextField\n            sx={{ width: '260px' }}\n            variant=\"standard\"\n            onChange={handleInputChange}\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            required\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            size=\"small\"\n            margin=\"none\"          \n            fullWidth\n            id=\"number\"\n            label=\"Number\"\n            inputProps={{ inputMode: 'numeric', pattern: '[0-9]*' }}\n            // InputProps={{\n            //   startAdornment: (\n            //     <InputAdornment position=\"start\">\n            //       <PhoneIphoneIcon sx={{ color: '#0f7ec9' }} />\n            //     </InputAdornment>\n            //   ),\n            // }}\n          />\n        </Box>       \n          <Button\n            type=\"submit\"\n            // fullWidth\n            variant=\"contained\"\n            sx={{ mr: -1, mt: \"18px\", width: '200px' }}\n          >\n            Add contact\n          </Button>                       \n    </Box>\n  );\n};\n\nexport default ContactForm;\n","import PropTypes from 'prop-types';\nimport createContainer from './createContainer';\n\n/**\n *\n * Demos:\n *\n * - [Container (Material UI)](https://mui.com/material-ui/react-container/)\n * - [Container (MUI System)](https://mui.com/system/react-container/)\n *\n * API:\n *\n * - [Container API](https://mui.com/system/api/container/)\n */\nconst Container = createContainer();\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   * @default false\n   */\n  fixed: PropTypes.bool,\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   * @default 'lg'\n   */\n  maxWidth: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Container;","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectLoading } from 'redux/contacts/selectors';\nimport ContactForm from 'components/ContactAddForm/ContactAddForm';\nimport { Main } from './Title.styled';\n\nimport Loader from 'components/Loader/Loader';\nimport { Container } from '@mui/system';\n\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n  // console.log(isLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Main>\n      <Container sx={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\", pt: 2, pb: 4 }} maxWidth=\"xl\">\n      {isLoading && <Loader />}\n      {/* {isLoggedIn ? ( ) :  (<div>Please Login or register</div>) } */}\n        {/* <h2> \n            <PeopleAlt fontSize=\"large\" sx={{ mr: 1 }} />\n                 Your Contacts \n        </h2> */}\n        \n      <ContactForm />\n      <Filter />\n      {/* <div>{isLoading && 'Request in progress...'}</div> */}\n      <ContactList />      \n      </Container>\n    </Main>\n  );\n}\n","import styled from 'styled-components';\n// import image from '../images/background.jpg'\n\nexport const Title = styled.h1`\n  font-family: 'Handlee', cursive;\n  font-size: 24px;\n  text-align: center;\n  margin-bottom: 20px;\n  width: 180px;\n  padding-bottom: 5px;\n  border-radius: 10px;\n  background-color: #fff;\n  /* color:  #065b94; */\n`;\n\nexport const TitleLogin = styled.h1`\n  font-family: 'Handlee', cursive;\n  font-size: 24px;\n  text-align: center;\n  margin-bottom: 20px;\n  width: 80px;\n  padding-bottom: 5px;\n  border-radius: 10px;\n  background-color: #fff;  \n  /* box-shadow: ; */\n  /* color: #0f7ec9; */\n`;\n\nexport const Main = styled.main`\n  /* height: 100vh; */\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  /* margin: 0 auto; */\n  padding-top: 54px;  \n`\n/* background-image: url('${image }'); */","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm-7 3c1.93 0 3.5 1.57 3.5 3.5S13.93 13 12 13s-3.5-1.57-3.5-3.5S10.07 6 12 6zm7 13H5v-.23c0-.62.28-1.2.76-1.58C7.47 15.82 9.64 15 12 15s4.53.82 6.24 2.19c.48.38.76.97.76 1.58V19z\"\n}), 'AccountBox');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M14.12 10.47 12 12.59l-2.13-2.12-1.41 1.41L10.59 14l-2.12 2.12 1.41 1.41L12 15.41l2.12 2.12 1.41-1.41L13.41 14l2.12-2.12zM15.5 4l-1-1h-5l-1 1H5v2h14V4zM6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM8 9h8v10H8V9z\"\n}), 'DeleteForeverOutlined');\nexports.default = _default;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M15.5 1h-8C6.12 1 5 2.12 5 3.5v17C5 21.88 6.12 23 7.5 23h8c1.38 0 2.5-1.12 2.5-2.5v-17C18 2.12 16.88 1 15.5 1zm-4 21c-.83 0-1.5-.67-1.5-1.5s.67-1.5 1.5-1.5 1.5.67 1.5 1.5-.67 1.5-1.5 1.5zm4.5-4H7V4h9v14z\"\n}), 'PhoneIphone');\nexports.default = _default;"],"names":["Item","styled","DeleteContact","Contact","id","number","name","dispatch","useDispatch","AccountBox","fontSize","sx","mr","type","onClick","deleteContact","DeleteForeverOutlined","List","selectLoading","state","contacts","isLoading","selectFilter","filter","selectСontacts","items","ContactList","useSelector","normalizedFilter","toLowerCase","filteredContacts","contact","includes","useEffect","fetchContacts","map","Filter","valueFilter","Typography","variant","gutterBottom","width","mb","mt","TextField","label","value","onChange","event","filterContacts","currentTarget","nanoid","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase","Title","createSvgIcon","_jsx","fillRule","d","cx","cy","r","useState","setName","setNumber","handleInputChange","console","log","Box","display","flexDirection","gap","justifyContent","alignItems","component","autoComplete","maxWidth","onSubmit","preventDefault","newContact","addContact","PeopleAlt","PersonAddAlt1","color","my","required","title","margin","inputProps","pattern","PhoneIphone","fullWidth","inputMode","Button","createContainer","Contacts","pt","pb","Loader","TitleLogin","Main","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx"],"sourceRoot":""}