{"version":3,"file":"static/js/997.8611dd8f.chunk.js","mappings":"uRAEaA,EAAOC,EAAAA,GAAAA,GAAH,oVAgBJC,EAAgBD,EAAAA,GAAAA,OAAH,6O,SCVbE,EAAU,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,GAAIC,EAAmB,EAAnBA,OAAQC,EAAW,EAAXA,KAC9BC,GAAWC,EAAAA,EAAAA,MAMjB,OACI,UAACR,EAAD,YACE,SAACS,EAAA,EAAD,CAAgBC,SAAS,QAAQC,GAAI,CAAEC,GAAI,MAC3C,yBACGN,EADH,MACU,0BAAOD,QAEjB,UAACH,EAAD,CAAeW,KAAK,SAASC,QAVlB,WACfP,GAASQ,EAAAA,EAAAA,IAAcX,GACxB,EAQK,oBACE,SAACY,EAAA,EAAD,CAA2BL,GAAI,CAAED,SAAU,WAIpD,ECxBYO,EAAOhB,EAAAA,GAAAA,GAAH,8ICFJiB,EAAgB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,SAAnB,EAErBC,EAAe,SAAAH,GAAK,OAAIA,EAAMI,MAAV,EAEpBC,EAAiB,SAAAL,GAAK,OAAIA,EAAMC,SAASK,KAAnB,ECKtBC,EAAc,WACzB,IAAMN,GAAWO,EAAAA,EAAAA,IAAYH,GAGvBD,GAASI,EAAAA,EAAAA,IAAYL,GACrBf,GAAWC,EAAAA,EAAAA,MAEXoB,EAAmBL,EAAOM,cAC1BC,EAAmBV,EAASG,QAAO,SAAAQ,GAAO,OAAIA,EAAQzB,KAAKuB,cAAcG,SAASJ,EAAxC,IAMhD,OAJAK,EAAAA,EAAAA,YAAU,WACJ1B,GAAS2B,EAAAA,EAAAA,MACZ,GAAE,CAAC3B,KAGJ,SAACU,EAAD,UACGa,EAAiBK,KAAI,gBAAG/B,EAAH,EAAGA,GAAIE,EAAP,EAAOA,KAAMD,EAAb,EAAaA,OAAb,OAClB,SAACF,EAAD,CAAkBC,GAAIA,EAAIE,KAAMA,EAAMD,OAAQA,GAAhCD,EADI,KAK3B,E,UC5BYgC,EAAcnC,EAAAA,GAAAA,GAAH,oKAOXoC,EAAcpC,EAAAA,GAAAA,MAAH,4dCAXqC,EAAS,WACpB,IAAMC,GAAcZ,EAAAA,EAAAA,IAAYL,GAC1Bf,GAAWC,EAAAA,EAAAA,MAMf,OACI,8BACI,SAAC4B,EAAD,sBACA,SAACC,EAAD,CACIxB,KAAK,OACLP,KAAK,SACLkC,MAAOD,EACPE,SAXK,SAAAC,GACbnC,GAASoC,EAAAA,EAAAA,GAAeD,EAAME,cAAcJ,OAC/C,EAUWK,YAAY,oBAI1B,E,oBC3BWC,EAAY7C,EAAAA,GAAAA,GAAH,gGAIT8C,EAAgB9C,EAAAA,GAAAA,KAAH,qaAgBb+C,EAAY/C,EAAAA,GAAAA,MAAH,+FAKTgD,EAAYhD,EAAAA,GAAAA,MAAH,uXAaTiD,EAAUjD,EAAAA,GAAAA,OAAH,+iBCoDpB,EA9E2B,WACvB,OAAwBkD,EAAAA,EAAAA,UAAS,IAAjC,eAAO7C,EAAP,KAAa8C,EAAb,KACA,GAA4BD,EAAAA,EAAAA,UAAS,IAArC,eAAO9C,EAAP,KAAegD,EAAf,KACM9C,GAAWC,EAAAA,EAAAA,MAEX8C,EAAoB,SAAAZ,GACtB,OAAQA,EAAME,cAActC,MAC1B,IAAK,OAAQ8C,EAAQV,EAAME,cAAcJ,OACzC,MAEA,IAAK,SAAUa,EAAUX,EAAME,cAAcJ,OAC7C,MAEA,QACA,OAEFe,QAAQC,IAAIlD,EAAMD,EACrB,EAoBKoD,GAAcC,EAAAA,EAAAA,MACdC,GAAgBD,EAAAA,EAAAA,MAGxB,OACE,UAACX,EAAD,CAAea,SAvBU,SAAAlB,GACrBA,EAAMmB,iBACN,IAAMC,EAAa,CACfxD,KAAAA,EACAD,OAAAA,EACAD,IAAIsD,EAAAA,EAAAA,OAORnD,GAASwD,EAAAA,EAAAA,IAAWD,IAEpBV,EAAQ,IACRC,EAAU,GACb,EAOD,WACA,SAACP,EAAD,kCACI,UAACE,EAAD,CAAWgB,QAASP,EAApB,kBACU,OAEV,SAACR,EAAD,CACIpC,KAAK,OACLP,KAAK,OACLF,GAAIqD,EACJQ,QAAQ,yHACRC,MAAM,yIACNrB,YAAY,gBACZsB,UAAQ,EACR3B,MAAOlC,EACPmC,SAAUa,KAGd,UAACN,EAAD,CAAWgB,QAASL,EAApB,oBACY,OAEZ,SAACV,EAAD,CACIpC,KAAK,MACLP,KAAK,SACLF,GAAIuD,EACJM,QAAQ,yFACRC,MAAM,+FACNrB,YAAY,aACZsB,UAAQ,EACR3B,MAAOnC,EACPoC,SAAUa,KAElB,SAACJ,EAAD,CAASrC,KAAK,SAAd,2BAGH,E,mBC7Ec,SAASuD,IACtB,IAAM7D,GAAWC,EAAAA,EAAAA,MACXa,GAAYM,EAAAA,EAAAA,IAAYT,GAO9B,OAJAe,EAAAA,EAAAA,YAAU,WACR1B,GAAS2B,EAAAA,EAAAA,MACV,GAAE,CAAC3B,KAGF,UAAC,IAAD,WACGc,IAAa,SAACgD,EAAA,EAAD,KAEZ,2BACI,SAAC5D,EAAA,EAAD,CAAgBC,SAAS,QAAQC,GAAI,CAAEC,GAAI,KAD/C,oBAIA,SAAC0B,EAAD,KACA,SAAC,EAAD,KAEF,SAACZ,EAAD,MAIL,C,wGCnCY4C,EAAQrE,EAAAA,GAAAA,GAAH,+HAOLsE,EAAOtE,EAAAA,GAAAA,KAAH,yI","sources":["components/Contact/Contact.styled.jsx","components/Contact/Contact.jsx","components/ContactList/ContactList.styled.jsx","redux/contacts/selectors.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactAddForm/ContactAddForm.styled.jsx","components/ContactAddForm/ContactAddForm.jsx","pages/Contacts.js","pages/Title.styled.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Item = styled.li`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  padding: 8px 0px;\n  transition: border-bottom 250ms linear;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.54);\n  :hover {\n    border-bottom: 1px solid #1363df;\n    :hover > svg {\n      transition: color 250ms linear;\n      color: #1363df;\n    }\n  }\n`;\n\nexport const DeleteContact = styled.button`\n  display: flex;\n  justify-content: center;\n  margin-left: auto;\n  background: transparent;\n  border: none;\n  cursor: pointer;\n  :hover > svg {\n    transition: color 250ms linear;\n    color: tomato;\n  }\n`;","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\n\nimport AccountBoxIcon from '@mui/icons-material/AccountBox';\nimport DeleteForeverOutlinedIcon from '@mui/icons-material/DeleteForeverOutlined';\nimport { Item, DeleteContact } from './Contact.styled';\n\nexport const Contact = ({ id, number, name }) => {\n  const dispatch = useDispatch();\n\n  const onDelete = () => {\n    dispatch(deleteContact(id));\n  };\n\n  return (    \n      <Item >\n        <AccountBoxIcon fontSize=\"large\" sx={{ mr: 1 }} />\n        <p>\n          {name}: <span>{number}</span>\n        </p>\n        <DeleteContact type=\"button\" onClick={onDelete}>Delete\n          <DeleteForeverOutlinedIcon sx={{ fontSize: 30 }} />\n        </DeleteContact>\n      </Item>    \n  );\n};\n\nContact.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};","import styled from \"styled-components\";\n\nexport const List = styled.ul`\n  padding: 0;\n  margin: 0;\n  list-style: none;\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-gap: 12px;\n`","export const selectLoading = state => state.contacts.isLoading;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectСontacts = state => state.contacts.items;\n","import PropTypes from 'prop-types'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Contact } from 'components/Contact/Contact';\nimport { List } from './ContactList.styled';\nimport { selectFilter, selectСontacts } from 'redux/contacts/selectors';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/operations';\n\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectСontacts);\n  // console.log(selectСontacts);\n  // console.log(contacts);\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const normalizedFilter = filter.toLowerCase();\n  const filteredContacts = contacts.filter(contact => contact.name.toLowerCase().includes(normalizedFilter));\n\n  useEffect(() => {\n        dispatch(fetchContacts());\n    }, [dispatch]);\n\n  return (\n    <List >\n      {filteredContacts.map(({ id, name, number }) => (\n          <Contact key={id} id={id} name={name} number={number} />\n      ))}\n    </List>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }).isRequired\n  ),\n}","import styled from 'styled-components';\n\nexport const FilterTitle = styled.h2`\n    font-size: 30px;\n    margin: 10px 0;\n    color: darkblue;\n    text-shadow: 2px 2px 2px rgba(0, 0, 0, 0.2);\n    text-align: center;\n`\nexport const Filterinput = styled.input`\n    width: 275px;\n    height: 22px;\n    margin-bottom: 10px;\n    padding: 4px;\n    border: 0.3px solid rgb(78, 41, 20);\n    border: 0.3px solid darkcyan;\n    border: 0.3px solid rgb(20, 66, 78);\n    border-radius: 10px;\n    background-color: rgba(228, 253, 252, 0.952);\n    font-size: 18px;\n    transition: box-shadow 150ms cubic-bezier(0.4, 0, 0.2, 1);\n        &:focus, :hover {\n        box-shadow: 1px 3px 3px rgba(0, 0, 0, 0.4);\n}    \n`","import { useDispatch, useSelector } from 'react-redux';\nimport { filterContacts } from 'redux/contacts/filterSlice';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport {\n  FilterTitle, \n  Filterinput, \n} from './Filter.styled';\n\n\nexport const Filter = () => {\n  const valueFilter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n    const onFilter = event => {\n        dispatch(filterContacts(event.currentTarget.value));\n    };  \n     \n    return (       \n        <label>\n            <FilterTitle>Filter</FilterTitle>  \n            <Filterinput\n                type=\"text\"\n                name=\"filter\" \n                value={valueFilter}\n                onChange={onFilter}\n                placeholder=\"Enter request\"\n            ></Filterinput>            \n        </label>     \n    )    \n }\n\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const FormTitle = styled.h1`\n    font-size: 35px;\n    text-shadow: 2px 2px 2px rgba(0, 0, 0, 0.2);\n`\nexport const PhonebookForm = styled.form`\n    margin: 0 auto;\n    list-style: inside;\n    display: flex;\n    flex-direction: column;\n    max-width: 640px;\n    min-width: 340px;\n    /* width: 355px; */\n    padding: 20px;\n    border: 1px solid black;\n    border: 0.3px solid darkcyan;\n    border-radius: 5px;\n    /* background-color: rgb(100, 237, 207); */\n    color: darkblue;\n    box-shadow: 3px 6px 6px rgba(0, 0, 0, 0.15);\n`\nexport const FormLabel = styled.label`\n    font-size: 18px;\n    font-weight: 500;\n    margin-bottom: 10px;\n`\nexport const FormInput = styled.input`\n    width: 250px;\n    margin-bottom: 10px;\n    padding: 4px;\n    border: 0.3px solid rgb(20, 66, 78);\n    border-radius: 3px;\n    background-color: rgba(228, 253, 252, 0.952);\n    font-size: 18px;\n    transition: box-shadow 150ms cubic-bezier(0.4, 0, 0.2, 1);\n        &:focus, :hover {\n        box-shadow: 1px 3px 3px rgba(0, 0, 0, 0.4);\n}\n`\nexport const FormBtn = styled.button`\n    width: 125px;\n    padding: 10px 15px;\n    margin-top: 20px;\n    background-color: rgb(20, 89, 116);\n    /* background-color: rgb(28, 80, 165); */\n    color: white;\n    border: none;\n    border-radius: 15px;\n\n    transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    background-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1);\n        &:hover {\n        background-color: #fafafa;\n        color: darkblue;\n        box-shadow: 1px 3px 3px rgba(0, 0, 0, 0.4);\n        }\n`","import React, { useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport { useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport {\n    FormTitle,\n    PhonebookForm,\n    FormLabel,\n    FormInput,\n    FormBtn,\n} from './ContactAddForm.styled'\n\n\n\nexport const ContactForm = () => {   \n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n    const dispatch = useDispatch();\n\n    const handleInputChange = event => {\n        switch (event.currentTarget.name) {\n          case \"name\": setName(event.currentTarget.value)\n          break\n      \n          case \"number\": setNumber(event.currentTarget.value)\n          break\n      \n          default:\n          return\n        };\n        console.log(name, number);\n    }\n\n    const handleFormSubmit = event => {\n        event.preventDefault();\n        const newContact = {\n            name,\n            number,\n            id: nanoid(),\n        };\n\n        // toaster\n        // toaster\n        // toaster\n\n        dispatch(addContact(newContact));\n\n        setName('');\n        setNumber('');\n    }\n\n    const nameInputId = nanoid();\n    const numberInputId = nanoid();\n\n\n  return (\n    <PhonebookForm onSubmit={handleFormSubmit} >\n    <FormTitle>Create new contact</FormTitle>\n        <FormLabel htmlFor={nameInputId} >\n            Name {''}\n        </FormLabel>                \n        <FormInput\n            type=\"text\"\n            name=\"name\"\n            id={nameInputId}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            placeholder=\"Emmy Richards\"\n            required\n            value={name}\n            onChange={handleInputChange}\n        />                \n        \n        <FormLabel htmlFor={numberInputId}>\n            Number {''}\n        </FormLabel>                \n        <FormInput\n            type=\"tel\"\n            name=\"number\"\n            id={numberInputId}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            placeholder=\"000-000-00\"\n            required\n            value={number}\n            onChange={handleInputChange}\n        />                        \n    <FormBtn type=\"submit\">Add contact</FormBtn>\n    </PhonebookForm>\n  );\n};\n\nexport default ContactForm;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectLoading } from 'redux/contacts/selectors';\nimport ContactForm from 'components/ContactAddForm/ContactAddForm';\nimport { Main } from './Title.styled';\n\nimport AccountBoxIcon from '@mui/icons-material/AccountBox';\nimport Loader from 'components/Loader/Loader';\n\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n  // console.log(isLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Main>\n      {isLoading && <Loader />}\n      {/* {isLoggedIn ? ( ) :  (<div>Please Login or register</div>) } */}\n        <h2> \n            <AccountBoxIcon fontSize=\"large\" sx={{ mr: 1 }} />\n                 Your Contacts \n        </h2>\n        <Filter />\n        <ContactForm />\n      {/* <div>{isLoading && 'Request in progress...'}</div> */}\n      <ContactList />      \n      \n    </Main>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Title = styled.h1`\n  font-family: 'Handlee', cursive;\n  font-size: 24px;\n  text-align: center;\n  margin-bottom: 20px;\n`;\n\nexport const Main = styled.main`\ndisplay: flex;\nflex-direction: column;\n/* justify-content: center; */\nalign-items: center;\n  margin: 0 auto;\n`"],"names":["Item","styled","DeleteContact","Contact","id","number","name","dispatch","useDispatch","AccountBox","fontSize","sx","mr","type","onClick","deleteContact","DeleteForeverOutlined","List","selectLoading","state","contacts","isLoading","selectFilter","filter","selectСontacts","items","ContactList","useSelector","normalizedFilter","toLowerCase","filteredContacts","contact","includes","useEffect","fetchContacts","map","FilterTitle","Filterinput","Filter","valueFilter","value","onChange","event","filterContacts","currentTarget","placeholder","FormTitle","PhonebookForm","FormLabel","FormInput","FormBtn","useState","setName","setNumber","handleInputChange","console","log","nameInputId","nanoid","numberInputId","onSubmit","preventDefault","newContact","addContact","htmlFor","pattern","title","required","Contacts","Loader","Title","Main"],"sourceRoot":""}